<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.7">
  <compounddef id="todo" kind="page">
    <compoundname>todo</compoundname>
    <title>Todo List</title>
    <detaileddescription>
<para><variablelist>
<varlistentry><term><anchor id="todo_1_todo000005"/>Member <ref refid="class_bid_unit_test_1a00b30251528b2203d6d9f17c321bc499" kindref="member">BidUnitTest.instantiation</ref>  ()</term></varlistentry>
<listitem><para>Tests if the Bid object instantiates as expected  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000001"/>Member <ref refid="classfinancialmarketsimulator_1_1_market_entry_attempt_1a9b2f8a9eef7975bc053907e2ea05c779" kindref="member">financialmarketsimulator.MarketEntryAttempt.MarketEntryAttempt</ref>  (double pr, int numShares, String name)</term></varlistentry>
<listitem><para>MarketEntryAttempt class constructor </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000003"/>Member <ref refid="classfinancialmarketsimulator_1_1_market_entry_attempt_1a27476573fd4a0aa03270c648500a3c98" kindref="member">financialmarketsimulator.MarketEntryAttempt.setNumberOfShares</ref>  (int _numShares)</term></varlistentry>
<listitem><para>Sets the number of shares for the entry attempt, i.e. the number of shares being offered or bid <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_numShares</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of shares for the entry attempt.  </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></listitem>
<varlistentry><term><anchor id="todo_1_todo000004"/>Member <ref refid="classfinancialmarketsimulator_1_1_market_entry_attempt_1af2b5d63e0ac8d2e39cf474e128739c8a" kindref="member">financialmarketsimulator.MarketEntryAttempt.setParticipantName</ref>  (String _name)</term></varlistentry>
<listitem><para>Sets the name of the participant making the entry attempt. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the participant making the entry attempt.  </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></listitem>
<varlistentry><term><anchor id="todo_1_todo000002"/>Member <ref refid="classfinancialmarketsimulator_1_1_market_entry_attempt_1ac350f88eed14da376cb58aa920df2f38" kindref="member">financialmarketsimulator.MarketEntryAttempt.setPrice</ref>  (double _price)</term></varlistentry>
<listitem><para>Sets the price of the shares for entry attempt, i.e. sets the price of shares being offered or bid. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_price</parametername>
</parameternamelist>
<parameterdescription>
<para>The price of the shares for the entry attempt.  </para></parameterdescription>
</parameteritem>
</parameterlist>
</para></listitem>
<varlistentry><term><anchor id="todo_1_todo000006"/>Member <ref refid="class_market_manager_unit_test_1aadbb351148ad8792ffdc73d21a477d46" kindref="member">MarketManagerUnitTest.acceptBidTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000007"/>Member <ref refid="class_market_manager_unit_test_1a048bcd980b57e21cf535525c3d354327" kindref="member">MarketManagerUnitTest.acceptOfferTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000008"/>Member <ref refid="class_market_manager_unit_test_1ad15bca438fb420eb4edc10d2a6d5d69b" kindref="member">MarketManagerUnitTest.removeBidTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000009"/>Member <ref refid="class_market_manager_unit_test_1a3a39f91093490fa570428eeadbee53d8" kindref="member">MarketManagerUnitTest.removeOfferTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000010"/>Member <ref refid="class_market_manager_unit_test_1a1c14446d8fae8ccdc8bbfb43054a5528" kindref="member">MarketManagerUnitTest.updateEngineTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000011"/>Member <ref refid="class_market_manager_unit_test_1ac830f868e90ae29122ae6382a4d227de" kindref="member">MarketManagerUnitTest.updateEntitiesTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000013"/>Member <ref refid="class_market_strategy_unit_test_1a98b0ebe10401ed5d3c9af160dfcb8f2a" kindref="member">MarketStrategyUnitTest.makeBidTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000012"/>Member <ref refid="class_market_strategy_unit_test_1ab814f5c9983e0eaa02f7c5040b81971a" kindref="member">MarketStrategyUnitTest.makeOfferTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000014"/>Member <ref refid="class_market_strategy_unit_test_1aa0b0a03a9824cd06bc94c68d9c45042f" kindref="member">MarketStrategyUnitTest.retractBidTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000015"/>Member <ref refid="class_market_strategy_unit_test_1a045225ba03abd2845f49e6c0e065712a" kindref="member">MarketStrategyUnitTest.retractOfferTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000017"/>Member <ref refid="class_market_strategy_unit_test_1a090ee23fae74dd8351ad91f17c784627" kindref="member">MarketStrategyUnitTest.searchMarketEntryAttempt</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000016"/>Member <ref refid="class_market_strategy_unit_test_1ac701e483e622d7a918f1b8f21f024108" kindref="member">MarketStrategyUnitTest.setStrategyTest</ref>  ()</term></varlistentry>
<listitem><para></para></listitem>
<varlistentry><term><anchor id="todo_1_todo000018"/>Member <ref refid="class_matching_engine_unit_test_1acbb8d543a15e349d8f46769388fd28bd" kindref="member">MatchingEngineUnitTest.instantiation</ref>  ()</term></varlistentry>
<listitem><para>Tests if the MatchingEngine object instantiates as expected  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000019"/>Member <ref refid="class_matching_engine_unit_test_1a2dbbdf5632bac8d35d6902caf5556c5f" kindref="member">MatchingEngineUnitTest.tradeTest</ref>  ()</term></varlistentry>
<listitem><para>Tests the MatchingEngine trade() function. Two cases are tested: Firstly, if the trade function will record a trade when an offer and a bid are explicitly made to match, and secondly if the trade function will record no trade when all bids and offers are made explicitly not to match. The function creates mock bid and offer stacks and populates them with mock bid and offer objects. Trade is then called on those stacks.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000020"/>Member <ref refid="class_matching_engine_unit_test_1a914f15f54087d84798e02b33734a9791" kindref="member">MatchingEngineUnitTest.updateTest</ref>  ()</term></varlistentry>
<listitem><para>Observes the bid and offer stacks when called and informs the MarketManager to either update or not update the views accordingly.  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000021"/>Member <ref refid="class_offer_unit_test_1a6a183dfb778383f20231c0dd4a43dc65" kindref="member">OfferUnitTest.instantiation</ref>  ()</term></varlistentry>
<listitem><para>Tests if the Offer object instantiates as expected  </para></listitem>
<varlistentry><term><anchor id="todo_1_todo000022"/>Member <ref refid="class_receipt_unit_test_1aab92fcc0a866db8ec56ed65b9693cdc8" kindref="member">ReceiptUnitTest.instantiation</ref>  ()</term></varlistentry>
<listitem><para>Tests if the Receipt object instantiates as expected </para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
